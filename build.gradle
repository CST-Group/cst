apply plugin: 'java-library-distribution'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'com.google.protobuf'


group = 'com.github.CST-Group'

description = "CST is the Cognitive Systems Toolkit, a toolkit for the construction of Cognitive Systems and Cognitive Architectures"

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '0.7.0'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    }
}

sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
    maven {
        url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/release"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/external"
    }
    maven { url 'https://jitpack.io' }
}

configurations {
    extraLibs
}

def grpcVersion = '1.39.0'

dependencies {
    configurations.implementation.extendsFrom(configurations.extraLibs)

    api 'com.google.code.gson:gson:2.8.6'
    //api 'org.slf4j:slf4j-api:1.7.5'
    api 'net.openhft:compiler:2.3.0'  // Used by util/CodeBuilder.java
    //implementation 'com.google.code.gson:gson:2.7'
    //implementation 'org.slf4j:slf4j-api:1.7.5'
    //implementation 'net.openhft:compiler:2.3.0'

    api group: 'org.jfree', name: 'jfreechart', version: '1.0.19'
    api group: 'org.json', name: 'json', version: '20160212'
    api group: 'net.sf.jung', name: 'jung-algorithms', version: '2.0.1'
    api group: 'net.sf.jung', name: 'jung-graph-impl', version: '2.0.1'
    api group: 'net.sf.jung', name: 'jung-visualization', version: '2.0.1'
    api group: 'net.sf.jung', name: 'jung-api', version: '2.0.1'
    api group: 'org.opt4j', name: 'opt4j-core', version: '3.1'  // Used in GLAS
    api group: 'org.opt4j', name: 'opt4j-optimizers', version: '3.1'
    api group: 'org.opt4j', name: 'opt4j-viewer', version: '3.1'
    api group: 'org.opt4j', name: 'opt4j-benchmarks', version: '3.1'
    api group: 'org.opt4j', name: 'opt4j-operators', version: '3.1'
    api group: 'org.opt4j', name: 'opt4j-satdecoding', version: '3.1'
    api group: 'org.opt4j', name: 'opt4j-tutorial', version: '3.1'
    api 'org.antlr:antlr4-runtime:4.5.3' // Used in OwrlBaseListener
    api 'ch.qos.logback:logback-classic:1.0.11' // Used in JSoarCodelet
    api 'com.soartech:jsoar-core:4.1.0'
    api 'com.soartech:jsoar-debugger:4.1.0'
    //api 'org.ros.rosjava_core:rosjava:0.3.6'
    //implementation 'com.github.rosjava:rosjava_core:0.3.7'
    api 'com.github.rosjava:rosjava_core:0.3.7'
    api 'org.ros.rosjava_bootstrap:message_generation:0.3.3'
    //implementation group: 'aopalliance', name: 'aopalliance', version: '1.0'
    //implementation group: 'asm', name: 'asm', version: '3.1'
    //implementation group: 'org.sonatype.sisu.inject', name: 'cglib', version: '2.2.1-v20090111'
    //implementation group: 'com.google.inject', name: 'guice', version: '3.0'  // Used by jsoar-core and jsoar-debugger
    //implementation group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '3.0' // Used by jsoar-core and jsoar-debugger
    //implementation group: 'javax.inject', name: 'javax.inject', version: '1'
    //implementation group: 'org.ow2.sat4j', name: 'org.ow2.sat4j.core', version: '2.3.3' // Used in jsoar-core and jsoar-debugger
    //implementation 'commons-beanutils:commons-beanutils-core:1.8.0' // Used by jsoar-core and jsoar-debugger
    //implementation 'org.apache.commons:commons-math3:3.0'   // Used by jsoar-core and jsoar-debugger
    //extraLibs ':jsoar-core'
    //extraLibs ':jsoar-debugger'
    //extraLibs 'org.ros.rosjava_core:rosjava:0.3.6'
    //extraLibs 'org.ros.rosjava_bootstrap:message_generation:0.3.3'
    //implementation 'dnsjava:dnsjava:2.1.9'
    //extraLibs 'org.apache.commons:com.springsource.org.apache.commons.logging:1.1.1'
    //extraLibs 'org.apache.commons:com.springsource.org.apache.commons.net:2.0.0'
    //implementation 'org.apache.commons:com.springsource.org.apache.commons.logging:1.1.1' // Used by jsoar-core and jsoar-debugger
    //implementation 'org.apache.commons:com.springsource.org.apache.commons.net:2.0.0'  // Used by jsoar-core and jsoar-debugger
    //implementation 'com.google.guava:guava:28.0-jre' // Used by jsoar-core and jsoar-debugger
    testImplementation 'com.1stleg:jnativehook:2.1.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.ros.rosjava_messages:std_msgs:0.5.11'
    testImplementation 'org.ros.rosjava_messages:rosjava_test_msgs:0.3.0'

    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.2'

    compileOnly group: "javax.annotation", name: "javax.annotation-api", version: "1.3.2"
    compileOnly group: "org.jetbrains", name: "annotations", version: "13.0"
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
        )
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
task uberJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveClassifier = 'full'
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}
artifacts
        {
            archives javadocJar, sourcesJar, uberJar
        }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.2'
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}